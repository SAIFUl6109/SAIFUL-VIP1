const spamTracker = {};

module.exports.config = {
  name: "antispam",
  eventType: ["message"],
  version: "1.1.0",
  credits: "rX",
  description: "Detect per-user spam and auto restart bot with sender name"
};

module.exports.run = async function({ api, event }) {
  const { threadID, senderID } = event;

  // sender name fetch
  let senderName = "Unknown";
  try {
    const userInfo = await api.getUserInfo(senderID);
    senderName = userInfo[senderID].name || senderName;
  } catch(e) {
    console.log("Failed to fetch user name:", e);
  }

  // senderID ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï spam track
  if (!spamTracker[senderID]) {
    spamTracker[senderID] = { count: 1, time: Date.now() };
  } else {
    let data = spamTracker[senderID];
    let now = Date.now();

    if (now - data.time < 5000) { // ‡ß´ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá
      data.count++;
    } else {
      data.count = 1;
      data.time = now;
    }

    // ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶ï‡¶ú‡¶® user ‡ß´ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá ‡ßß‡ß¶+ ‡¶¨‡¶æ‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¶‡ßá‡ßü
    if (data.count >= 10) {
      api.sendMessage(
        `${global.config.BOTNAME} ‚ö†Ô∏è Spam Detected from: ${senderName}\n${global.config.BOTNAME} ùêàùê¨ ùêßùê®ùê∞ ùêëùêûùê¨ùê≠ùêöùê´ùê≠ùê¢ùêßùê†...`,
        threadID,
        () => process.exit(1) // pm2/nodemon ‡¶è ‡¶ö‡¶æ‡¶≤‡¶æ‡¶≤‡ßá auto restart ‡¶π‡¶¨‡ßá
      );
    }
  }
};
