const fs = require("fs");
const path = require("path");

const protectFile = path.join(__dirname, "rx", "protect.json"); // protect.json

module.exports.config = {
  name: "protect",
  eventType: ["log:thread-name", "log:thread-icon", "log:thread-image"],
  version: "2.5.0",
  credits: "rX Abdullah",
  description: "Group Name, Emoji & Photo protection only"
};

// üîí Load JSON
function loadProtect() {
  if (!fs.existsSync(protectFile)) return {};
  return JSON.parse(fs.readFileSync(protectFile));
}

// ‚öôÔ∏è Event handler
module.exports.runEvent = async function({ event, api }) {
  try {
    const protect = loadProtect();
    const threadID = event.threadID;

    // ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ protect.json ‡¶è ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‚Üí ignore
    if (!protect[threadID]) return;

    const info = protect[threadID];
    const threadInfo = await api.getThreadInfo(threadID);

    // ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã author admin ‡¶ï‡¶ø ‡¶®‡¶æ
    const isAdmin = threadInfo.adminIDs.some(adm => adm.id == event.author);
    if (isAdmin) return; // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶π‡¶≤‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ

    // ‚ùå Non-admin ‚Üí ‡¶∞‡¶ø‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶ï‡¶∞‡ßã
    if (event.logMessageType === "log:thread-name") {
      await api.setTitle(info.name, threadID);
      await api.sendMessage(`‚ö†Ô∏è Non-admin [${event.author}] tried to change group name\nRestored: ${info.name}`, threadID);
    }
    else if (event.logMessageType === "log:thread-icon") {
      if (info.emoji) await api.changeThreadEmoji(info.emoji, threadID);
      await api.sendMessage("‚ö†Ô∏è ‡¶á‡¶Æ‡ßã‡¶ú‡¶ø ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶®‡¶Ø‡¶º! ü©∑ This group is protected", threadID);
    }
    else if (event.logMessageType === "log:thread-image") {
      const pathImg = path.join(__dirname, "rx", "cache", threadID + ".png");
      if (fs.existsSync(pathImg)) {
        await api.changeGroupImage(fs.createReadStream(pathImg), threadID);
      }
      await api.sendMessage("‚ö†Ô∏è ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶®‡¶Ø‡¶º! ü©∑ This group is protected", threadID);
    }

  } catch (err) {
    console.error("[Protect Error]", err);
  }
};
