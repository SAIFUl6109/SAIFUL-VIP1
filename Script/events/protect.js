const fs = require("fs");
const path = require("path");

const protectFile = path.join(__dirname, "../../protect.json");

module.exports.config = {
  name: "protect",
  eventType: ["log:thread-name", "log:thread-icon", "log:thread-image"],
  version: "2.0.0",
  credits: "rX Abdullah",
  description: "Always-on group protection (ЁЭРМЁЭРЪЁЭРлЁЭРвЁЭРЪ ├Ч ЁЭРлЁЭРЧ ЁЭРВЁЭРбЁЭРЪЁЭРнЁЭРЫЁЭРиЁЭРн)"
};

// ржпржЦржи ржЧрзНрж░рзБржкрзЗ ржХрзЛржирзЛ ржХрж┐ржЫрзБ ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯ, рждржЦржиржЗ рж░рж╛ржи ржХрж░ржмрзЗ
module.exports.runEvent = async function ({ event, api }) {
  try {
    if (!fs.existsSync(protectFile)) fs.writeFileSync(protectFile, JSON.stringify({}, null, 4));
    let protect = JSON.parse(fs.readFileSync(protectFile));
    const threadID = event.threadID;

    // ржЧрзНрж░рзБржк ржбрзЗржЯрж╛ ржирж╛ ржерж╛ржХрж▓рзЗ, ржПржЦржиржЗ рж╕рзЗржн ржХрж░рзЗ рж░рж╛ржЦржмрзЗ
    if (!protect[threadID]) {
      const info = await api.getThreadInfo(threadID);
      protect[threadID] = {
        name: info.threadName || "Unknown Group",
        emoji: info.emoji || "ЁЯТм",
        imagePath: __dirname + "/cache/" + threadID + ".png"
      };
      fs.writeFileSync(protectFile, JSON.stringify(protect, null, 4));
      return;
    }

    const info = protect[threadID];

    // ЁЯФТ ржирж╛ржо ржкрж░рж┐ржмрж░рзНрждржи
    if (event.logMessageType === "log:thread-name") {
      api.setTitle(info.name, threadID);
      api.sendMessage("you have no permission to change the group name", threadID);
    }

    // ЁЯФТ ржЗржорзЛржЬрж┐ ржкрж░рж┐ржмрж░рзНрждржи
    else if (event.logMessageType === "log:thread-icon") {
      api.changeThreadEmoji(info.emoji, threadID);
      api.sendMessage("тЪая╕П ржЗржорзЛржЬрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржЕржирзБржорзЛржжрж┐ржд ржиржпрж╝!\nЁЯй╖ Maria Community рж╕рж┐ржХрж┐ржЙрж░ ржорзЛржбрзЗ ржЖржЫрзЗред", threadID);
    }

    // ЁЯФТ ржЧрзНрж░рзБржк ржЫржмрж┐ ржкрж░рж┐ржмрж░рзНрждржи
    else if (event.logMessageType === "log:thread-image") {
      const pathImg = info.imagePath;
      if (fs.existsSync(pathImg)) {
        api.changeGroupImage(fs.createReadStream(pathImg), threadID);
      }
      api.sendMessage("тЪая╕П ржЧрзНрж░рзБржк ржЫржмрж┐рж░ ржкрж░рж┐ржмрж░рзНрждржи ржЕржирзБржорзЛржжрж┐ржд ржиржпрж╝!\nЁЯй╖ this group protect by rX Chat bot", threadID);
    }

  } catch (err) {
    console.error("[Maria Protect Error]", err);
  }
};

// ржкрзНрж░ржержоржмрж╛рж░ ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓рж┐ ржЪрж╛рж▓рж┐рзЯрзЗ рж╕рзЗржн ржХрж░рждрзЗ ржкрж╛рж░рзЛ
module.exports.run = async function ({ api, event }) {
  try {
    if (!fs.existsSync(protectFile)) fs.writeFileSync(protectFile, JSON.stringify({}, null, 4));
    const threadID = event.threadID;
    const info = await api.getThreadInfo(threadID);

    const protect = JSON.parse(fs.readFileSync(protectFile));
    protect[threadID] = {
      name: info.threadName || "Unknown Group",
      emoji: info.emoji || "ЁЯТм",
      imagePath: __dirname + "/cache/" + threadID + ".png"
    };

    fs.writeFileSync(protectFile, JSON.stringify(protect, null, 4));

    api.sendMessage("ЁЯЫбя╕П ЁЭРЖЁЭРлЁЭРиЁЭРоЁЭРй ЁЭРйЁЭРлЁЭРиЁЭРнЁЭРЮЁЭРЬЁЭРн ЁЭРжЁЭРиЁЭРЭЁЭРЮ ЁЭРвЁЭРм ЁЭРзЁЭРиЁЭР░ ЁЭРиЁЭРз ЁЯФТ", threadID);
  } catch (err) {
    console.error(err);
  }
};
