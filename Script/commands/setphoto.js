const fs = require("fs");
const path = require("path");
const axios = require("axios");

module.exports.config = {
  name: "setphoto",
  version: "1.0.0",
  hasPermssion: 2, // рж╢рзБржзрзБржорж╛рждрзНрж░ admin ржмрж╛ owner ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗ (0 ржжрж┐рж▓рзЗ рж╕ржмрж╛ржЗ ржкрж╛рж░ржмрзЗ)
  credits: "rX Abdullah",
  description: "Bot-ржПрж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЫржмрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи ржПржХржЯрж┐ ржЫржмрж┐рж░ рж░рж┐ржкрзНрж▓рж╛ржЗ ржмрж╛ ржЕрзНржпрж╛ржЯрж╛ржЪржорзЗржирзНржЯ ржжрж┐рзЯрзЗ",
  commandCategory: "system",
  usages: "Reply a photo with !set photo",
  cooldowns: 5,
};

module.exports.run = async function ({ api, event }) {
  try {
    const message = event.body ? event.body.toLowerCase() : "";
    const isSetPhotoCmd = message.includes("!set photo");

    if (!isSetPhotoCmd) return;

    // ржЪрзЗржХ ржХрж░рзБржи ржЕрзНржпрж╛ржЯрж╛ржЪржорзЗржирзНржЯ ржмрж╛ рж░рж┐ржкрзНрж▓рж╛ржЗ ржЖржЫрзЗ ржХрж┐ржирж╛
    let photoAttachment = null;
    if (event.attachments && event.attachments.length) {
      photoAttachment = event.attachments.find(a => a.type === "photo" || a.type === "image");
    }

    if (!photoAttachment && event.messageReply && event.messageReply.attachments) {
      photoAttachment = event.messageReply.attachments.find(a => a.type === "photo" || a.type === "image");
    }

    if (!photoAttachment) {
      return api.sendMessage(
        "> ЁЯОА\nЁЭРПЁЭРеЁЭРЪЁЭР▓ ЁЭР░ЁЭРвЁЭРнЁЭРб ЁЭРйЁЭРбЁЭРиЁЭРнЁЭРи",
        event.threadID,
        event.messageID
      );
    }

    const imageUrl = photoAttachment.url || photoAttachment.previewUrl;
    if (!imageUrl) {
      return api.sendMessage("тЪая╕П ржЗржорзЗржЬ рж▓рж┐ржЩрзНржХ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", event.threadID, event.messageID);
    }

    const tmpFile = path.join(__dirname, `tmp_${Date.now()}.jpg`);
    const writer = fs.createWriteStream(tmpFile);

    api.sendMessage("ЁЯФД ржЫржмрж┐ржЯрж┐ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ, ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи...", event.threadID, event.messageID);

    const response = await axios({
      url: imageUrl,
      method: "GET",
      responseType: "stream"
    });

    response.data.pipe(writer);

    writer.on("finish", () => {
      const imgStream = fs.createReadStream(tmpFile);

      api.changeAvatar(imgStream, (err) => { // ржХрж┐ржЫрзБ Mirai base-ржП setUserImage ржмрж╛ changeAvatar ржирж╛ржорзЗ ржерж╛ржХрзЗ
        fs.unlinkSync(tmpFile); // ржЯрзЗржорзНржк ржлрж╛ржЗрж▓ ржорзБржЫрзЗ ржжрж┐ржи
        if (err) {
          console.error(err);
          return api.sendMessage("тЭМ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЫржмрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ!", event.threadID);
        }
        return api.sendMessage("> ЁЯОА\nЁЭРОЁЭРд ЁЭРЭЁЭРиЁЭРзЁЭРЮ ЁЭРЫЁЭРЪЁЭРЫЁЭР▓..!", event.threadID);
      });
    });

    writer.on("error", (err) => {
      console.error(err);
      api.sendMessage("> ЁЯОА\nЁЭРТЁЭРиЁЭРлЁЭРлЁЭР▓ ЁЭРЫЁЭРЪЁЭРЫЁЭР▓ ЁЭРмЁЭРиЁЭРжЁЭРЮЁЭРнЁЭРбЁЭРвЁЭРзЁЭРа ЁЭР░ЁЭРлЁЭРиЁЭРзЁЭРа!", event.threadID);
    });

  } catch (err) {
    console.error(err);
    api.sendMessage("тЪая╕П ржХрзЛржирзЛ рждрзНрж░рзБржЯрж┐ ржШржЯрзЗржЫрзЗ!", event.threadID);
  }
};
